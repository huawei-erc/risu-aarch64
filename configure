#!/bin/sh
# simple risu configure script - Claudio Fontana
tmp_dir=`mktemp -d -t risu_configure_check_XXXXXX`

compile() {
    $CC $CFLAGS -c -o ${1}.o ${1}.c 2>/dev/null
}

check_define() {
    c=${tmp_dir}/check_define_${1}
    cat > ${c}.c <<EOF
#if !defined($1)
#error $1 not defined
#endif
int main(void) { return 0; }
EOF
    compile $c
}

guess_arch() {
    if check_define __arm__ ; then
        ARCH="arm"
    elif check_define __aarch64__ ; then
        ARCH="aarch64"
    else
        echo "This cpu is not supported by risu." >&2
        exit 1
    fi
}

check_type() {
    c=${tmp_dir}/check_type_${1}
    cat > ${c}.c <<EOF
#include <inttypes.h>
#include <stdint.h>
#include <sys/types.h>
#include <sys/socket.h>

int main(void) { $1 thisone; return 0; }
EOF
    compile $c
}

generate_config() {
    cfg=config.h
    echo "generating config.h..."

    echo "/* config.h - generated by the 'configure' script */" > $cfg
    echo "#ifndef CONFIG_H" >> $cfg
    echo "#define CONFIG_H 1" >> $cfg

    if check_type uintptr_t ; then
        echo "#define HAVE_UINTPTR_T 1" >> $cfg
    fi
    if check_type socklen_t ; then
        echo "#define HAVE_SOCKLEN_T 1" >> $cfg
    fi

    echo "#endif /* CONFIG_H */" >> $cfg

    echo "...done"
}

generate_makefilein() {
    m=Makefile.in
    echo "generating Makefile.in..."

    echo "# Makefile.in - generated by the 'configure' script" > $m
    echo "ARCH:=${ARCH}" >> $m
    echo "CC:=${CC}" >> $m
    echo "AS:=${AS}" >> $m
    echo "OBJCOPY:=${OBJCOPY}" >> $m

    echo "...done"
}

# STARTUP: entry point
CC="${CC-${CROSS_PREFIX}gcc}"
AS="${AS-${CROSS_PREFIX}as}"
OBJCOPY="${OBJCOPY-${CROSS_PREFIX}objcopy}"

if test "x${ARCH}" = "x"; then
    guess_arch
fi

generate_config
generate_makefilein

echo "type 'make' to start the build"
exit 0

